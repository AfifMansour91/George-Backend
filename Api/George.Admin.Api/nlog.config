<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="c:\temp\internal-nlog.txt">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!-- the targets to write to -->
	<targets>
		<!-- NOTE: &#009 is XML entity for TAB and can be used in the layout attribute. -->

		<!-- The following targets should be used for production. -->
		<target name="GeorgeLogFile" xsi:type="File" archiveEvery="Day" maxArchiveFiles="100" fileName="${basedir}\Logs\George.Log"
				layout="${longdate}| ${threadid} | ${uppercase:${level}} | ${callsite} | ${message} | ${exception:format=tostring} | url: ${aspnet-request-url}"/>
		<target name="GeorgeLogFile_ERR" xsi:type="File" archiveEvery="Day" maxArchiveFiles="100" fileName="${basedir}\Logs\George_ERR.Log"
				layout="${longdate}| ${threadid} | ${uppercase:${level}} | ${callsite} | ${message} | ${exception:format=tostring} | url: ${aspnet-request-url}"/>

		<!-- The following targets should can be used for debug and troubleshooting in production environment. -->
		<target name="ConsoleDEBUG" xsi:type="ColoredConsole"
				layout="${longdate} | ${threadid} | ${uppercase:${level}} | ${message} | ${exception:format=tostring} | url: ${aspnet-request-url}"/>
		<target name="GeorgeLogFileDEBUG" xsi:type="File" archiveEvery="Day" maxArchiveFiles="30" fileName="${basedir}\Logs\George_DEBUG.Log"
				layout="${longdate} | ${threadid} | ${uppercase:${level}} | ${callsite} | ${message} | ${exception:format=tostring} | url: ${aspnet-request-url}"/>
		<target name="GeorgeLogFileDEBUGStacktrace" xsi:type="File" archiveEvery="Day" maxArchiveFiles="30" fileName="${basedir}\Logs\George_DEBUG_Stacktrace.Log"
				layout="${longdate} | ${threadid} | ${uppercase:${level}} | ${message} | ${exception:format=tostring} | url: ${aspnet-request-url}"/>

		<!-- write logs to file  -->
		<!--<target xsi:type="File" name="allfile" fileName="${basedir}\Logs\nlog-all-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />-->

		<!-- another file log, only own logs. Uses some ASP.NET core renderers -->
		<!--<target xsi:type="File" name="ownFile-web" fileName="${basedir}\Logs\nlog-own-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />-->
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!-- Rules for production. -->
		<logger name="*" minlevel="Warn" writeTo="GeorgeLogFile"/>
		<logger name="*" minlevel="Error" writeTo="GeorgeLogFile_ERR"/>

		<!-- Rules for dubugging and troubleshooting. -->
		<logger name="*" minlevel="Trace" writeTo="ConsoleDEBUG"/>
		<logger name="George.*" minlevel="Trace" writeTo="GeorgeLogFileDEBUG"/>
		<logger name="*" minlevel="Warn" writeTo="GeorgeLogFileDEBUG"/>
		<!--<logger name="*" minlevel="Trace" writeTo="GeorgeLogFileDEBUGStacktrace"/>-->


		<!--All logs, including from Microsoft-->
		<!--
		<logger name="*" minlevel="Trace" writeTo="allfile" />-->

		<!--Skip non-critical Microsoft logs and so log only own logs-->
		<!--<logger name="Microsoft.*" maxlevel="Warn" final="true" />-->
		<!-- BlackHole without writeTo -->
		<!--
		<logger name="*" minlevel="Trace" writeTo="ownFile-web" />-->
	</rules>
</nlog>